{"version":3,"file":"cylindrical-panorama-viewer.js","sources":["../src/label.ts","../src/util.ts","../src/controller.ts","../src/index.ts"],"sourcesContent":["import {Vector2} from \"three\";\n\n/**\n * Class for a label placed on panorama surface\n */\nclass Label {\n  /**\n   * Position of center of the label.\n   */\n  public position: Vector2;\n  /**\n   * Root element for label\n   */\n  public root: HTMLElement;\n\n  /**\n   *\n   * @param x X coordinate of label. Must be between 0 and 1.\n   * @param y Y coordinate of label. Must be between -1 (bottom) and 1 (top).\n   * @param label\n   */\n  constructor(x: number, y: number, label: HTMLElement) {\n    this.position = new Vector2(x, y);\n\n    this.root = document.createElement('div');\n    this.root.style.position = 'absolute';\n    this.root.appendChild(label);\n  }\n}\n\nexport {Label};\n","/**\n * Maps angle to range from -PI to PI\n * @param value Angle in radians\n */\nexport function toRange(value: number) {\n  let a = (value % (2 * Math.PI) + 2 * Math.PI) % (2 * Math.PI);\n  if (a > Math.PI) {\n    a -= 2 * Math.PI;\n  }\n  return a;\n}\n","import {toRange} from \"./util\";\n\n// Default mouse speed\nconst DEFAULT_SPEED: number = 0.01;\n\n/**\n * Interface for controller\n */\nexport interface IController {\n  longitude: number;\n}\n\n/**\n * Simple controller implementation. Just sets longitude manually\n */\nexport class SimpleController implements IController {\n  public longitude: number;\n}\n\n/**\n * Mouse controller for viewer. Supports mouse and touch events\n */\nexport class MouseController implements IController {\n  // Element to which event listeners are attached\n  public root: HTMLElement;\n\n  // Whether mouse events are enabled\n  private _isMouseEnabled: boolean;\n  // Current rotation angle of panorama\n  private _longitude: number;\n  // Mouse speed\n  private readonly _mouseSpeed: number;\n\n  /**\n   * Constructor\n   * @param initialLongitude The initial rotation of panorama in radians\n   * @param rootElement Element to which event listeners are attached\n   * @param isMouseEnabled Whether mouse events are enabled\n   * @param mouseSpeed Mouse speed\n   */\n  constructor(initialLongitude: number, rootElement: HTMLElement, isMouseEnabled: boolean = true, mouseSpeed: number = DEFAULT_SPEED) {\n    this.root = rootElement;\n    this._longitude = toRange(initialLongitude);\n    this.isMouseEnabled = isMouseEnabled;\n    this._mouseSpeed = mouseSpeed;\n    console.log('MouseController constructor');\n  }\n\n  /**\n   * Gets whether mouse events are enabled\n   */\n  public get isMouseEnabled(): boolean {\n    return this._isMouseEnabled;\n  }\n\n  /**\n   * Sets whether mouse events are enabled. Enables or disables event listeners when needed\n   * @param value\n   */\n  public set isMouseEnabled(value: boolean) {\n    this._isMouseEnabled = value;\n    if (!this.root)\n      return;\n    if (value) {\n      this.root.addEventListener('mousedown', this.onMouseDown);\n      this.root.addEventListener('mouseup', this.onMouseUp);\n      this.root.addEventListener('mousemove', this.onMouseMove);\n      // this.root.addEventListener('touchstart', this.onMouseDown);\n      // this.root.addEventListener('touchup', this.onMouseUp);\n      // this.root.addEventListener('touchmove', this.onMouseMove);\n    } else {\n      this.root.removeEventListener('mousedown', this.onMouseDown);\n      this.root.removeEventListener('mouseup', this.onMouseUp);\n      this.root.removeEventListener('mousemove', this.onMouseMove);\n    }\n  }\n\n  /**\n   * Gets current rotation angle\n   */\n  public get longitude(): number {\n    return this._longitude;\n  }\n\n  /**\n   * Sets current rotation angle\n   * @param value\n   */\n  public set longitude(value: number) {\n    this._longitude = toRange(value);\n  }\n\n  // Whether mouse button is pressed\n  private isPressed: boolean = false;\n  // Previous mouse x coordinate\n  private prevPosition: number | null = null;\n\n  private onMouseDown = (event: MouseEvent) => {\n    this.isPressed = true;\n    this.prevPosition = event.clientX;\n  }\n\n  private onMouseUp = (event: MouseEvent) => {\n    this.isPressed = false;\n    this.prevPosition = null;\n  }\n\n  private onMouseMove = (event: MouseEvent) => {\n    if (this.isPressed) {\n      this.longitude -= (event.clientX - this.prevPosition) * this._mouseSpeed;\n      this.longitude = toRange(this.longitude);\n      this.prevPosition = event.clientX;\n    }\n  }\n}\n","'use strict';\nimport * as THREE from 'three';\nimport {Label} from './label';\nimport {toRange} from \"./util\";\nimport {MouseController, IController, SimpleController} from \"./controller\";\n\n// Default height of cylinder\nconst DEFAULT_H: number = 1;\n// Default distortion coefficient\nconst DEFAULT_DISTORTION: number = 1.1;\n// Default number of sides of cylinder\nconst CYLINDER_SIDES: number = 128;\n// Default vertical FOV of camera\nconst DEFAULT_FOV: number = THREE.MathUtils.degToRad(55);\n\nclass PanoramaViewer {\n  private readonly renderer: THREE.WebGLRenderer = new THREE.WebGLRenderer({antialias: true});\n  private readonly camera: THREE.PerspectiveCamera;\n  private readonly scene: THREE.Scene;\n  // Cylinder mesh used to display panorama\n  private mesh: THREE.Mesh;\n\n  public controller: IController;\n\n  // Vertical FOV of the camera\n  private fov: number = DEFAULT_FOV;\n  // Horizontal FOV of the camera\n  private horizontalFov: number;\n  // Distortion coefficient\n  private readonly distortion: number;\n  // Aspect ratio of render area\n  private aspectRatio: number;\n\n  // Radius of the cylinder\n  private cylinderRadius: number;\n  // Height of the cylinder\n  private cylinderHeight: number;\n  // Distance from center of cylinder to camera\n  private cameraRadius: number;\n  // Number of how many times image is repeated along cylinder surface\n  private repeatCount: number = 1;\n\n  // Image texture of the panorama\n  private texture: THREE.Texture;\n  private textureLoader: THREE.TextureLoader = new THREE.TextureLoader();\n\n  // List of labels placed on panorama\n  private labels: Label[] = [];\n  // Root div for label elements\n  private readonly labelRoot: HTMLElement;\n\n  // Whether animation loop is running\n  private isAnimating: boolean = false;\n  // Whether image is being loaded\n  private _isLoadingImage: boolean = false;\n\n  /**\n   * Constructor\n   * @param parent The parent element of the viewer.\n   * @param distortion The distortion of the image. Adds stretching on the left and right sides.\n   * @param controller The controller of the viewer. By default, mouse controller is used\n   */\n  constructor(\n    parent: HTMLElement,\n    distortion: number = DEFAULT_DISTORTION,\n    // controller: IController = new MouseController(0, parent, true)\n  ) {\n    parent.appendChild(this.renderer.domElement);\n    this.labelRoot = document.createElement('div');\n    parent.appendChild(this.labelRoot);\n    this.initCallbacks();\n\n    this.controller = new MouseController(0, this.renderer.domElement);\n    this.camera = new THREE.PerspectiveCamera(THREE.MathUtils.radToDeg(this.fov));\n    this.scene = new THREE.Scene();\n\n    this.distortion = distortion;\n  }\n\n  /**\n   * Shows whether image is being loaded\n   */\n  public get isLoadingImage(): boolean {\n    return this._isLoadingImage;\n  }\n\n  /**\n   * Starts the animation loop.\n   */\n  public startAnimationLoop() {\n    this.isAnimating = true;\n    requestAnimationFrame(() => this.animationLoop());\n  }\n\n  /**\n   * Stops the animation loop.\n   */\n  public stopAnimationLoop() {\n    this.isAnimating = false;\n  }\n\n  /**\n   * Sets the image to display.\n   * @param imageUrl The URL of the image to display.\n   * @param initialLongitude The initial rotation of the image in radians.\n   * @param newLabels List of labels to add to the viewer after loading image.\n   * @param onLoaded Callback to be called when image is loaded.\n   */\n  public setImage(imageUrl: string, initialLongitude: number = 0, newLabels: Label[] = [], onLoaded: () => void = () => {\n  }) {\n    this.loadImage(imageUrl, initialLongitude, newLabels, onLoaded);\n  }\n\n  /**\n   * Removes all labels from the viewer.\n   */\n  public clearLabels() {\n    this.labels = [];\n    this.labelRoot.replaceChildren();\n  }\n\n  /**\n   * Adds labels to the viewer.\n   * @param labels The labels to add.\n   */\n  public addLabels(labels: Label[]) {\n    this.labels = this.labels.concat(labels);\n    this.labelRoot.replaceChildren(\n      ...this.labels.map((v, _, __) => v.root),\n    );\n  }\n\n  /**\n   * Sets rotation of the image in radians.\n   * @param longitude New rotation of the image in radians.\n   */\n  public setLongitude(longitude: number) {\n    this.controller.longitude = toRange(longitude);\n  }\n\n  /**\n   * One iteration of the animation loop.\n   * @private\n   */\n  private animationLoop() {\n    this.texture.offset.set(this.repeatCount / 2 + this.controller.longitude % (2 * Math.PI) / 2 / Math.PI, 0);\n    this.renderer.render(this.scene, this.camera);\n    this.updateLabelPositions();\n    if (this.isAnimating)\n      requestAnimationFrame(() => this.animationLoop());\n  }\n\n  /**\n   * Loads image texture.\n   * @param imageURL The URL of the image to load.\n   * @param initialLongitude The initial rotation of the image in radians.\n   * @param newLabels List of labels to add to the viewer after loading image.\n   * @param onLoaded Called when image is loaded.\n   * @private\n   */\n  private loadImage(imageURL: string, initialLongitude: number, newLabels: Label[], onLoaded: () => void) {\n    this._isLoadingImage = true;\n    const isAnimating = this.isAnimating;\n    this.stopAnimationLoop();\n    this.texture = this.textureLoader.load(imageURL, (txt) => {\n      this.onTextureLoaded(txt, initialLongitude);\n      this.clearLabels();\n      this.addLabels(newLabels);\n      if (isAnimating)\n        this.startAnimationLoop();\n      this._isLoadingImage = false;\n      onLoaded();\n    });\n  }\n\n  /**\n   * Called when the texture is loaded.\n   * @param txt Loaded texture.\n   * @param initialLongitude The initial rotation of the image in radians.\n   * @private\n   */\n  private onTextureLoaded(txt: THREE.Texture, initialLongitude: number) {\n    this.texture = txt;\n    this.controller.longitude = initialLongitude;\n    this.update();\n    this.startAnimationLoop();\n  }\n\n  /**\n   * Updates everything after the image loaded or after window resized.\n   * @private\n   */\n  private update() {\n    this.updateRenderer();\n    this.calculateSceneParameters();\n    this.updateTexture();\n    this.updateScene();\n    this.updateCamera();\n  }\n\n  /**\n   * Updates renderer parameters\n   * @private\n   */\n  private updateRenderer() {\n    const width = this.renderer.domElement.parentElement.clientWidth;\n    const height = this.renderer.domElement.parentElement.clientHeight;\n    this.renderer.setSize(width, height);\n    this.aspectRatio = width / height;\n  }\n\n  /**\n   * Updates texture parameters.\n   * @private\n   */\n  private updateTexture() {\n    this.repeatCount = 2 * Math.PI * this.cylinderRadius / this.cylinderHeight / this.texture.image.width * this.texture.image.height;\n    console.log(\"repeat count: \" + this.repeatCount);\n    this.texture.repeat.setX(-this.repeatCount);\n    this.texture.wrapS = THREE.RepeatWrapping;\n    this.texture.flipY = true;\n  }\n\n  /**\n   * Calculates geometric parameters of the scene.\n   * @private\n   */\n  private calculateSceneParameters() {\n    const fov = this.fov;\n    const aspectRatio = this.aspectRatio;\n    this.horizontalFov = 2 * Math.atan(Math.tan(fov / 2) * aspectRatio);\n    const distortion = 1 + (this.distortion - 1) / aspectRatio / aspectRatio;\n    const H = DEFAULT_H;\n    this.cylinderHeight = H;\n    const diff = H / 2 / Math.tan(fov / 2);\n    const d = diff * (1 - 1 / distortion);\n    const R = (d * d + Math.pow(H / 2 / distortion / aspectRatio, 2)) / (2 * d);\n    this.cylinderRadius = R;\n    const r = R - diff;\n    this.cameraRadius = r;\n  }\n\n  /**\n   * Rebuilds the scene.\n   * @private\n   */\n  private updateScene() {\n    this.scene.clear();\n    const cylinderGeometry = new THREE.CylinderGeometry(\n      this.cylinderRadius, this.cylinderRadius,\n      this.cylinderHeight,\n      CYLINDER_SIDES,\n      1,\n      true,\n    );\n    cylinderGeometry.rotateZ(-Math.PI);\n    cylinderGeometry.rotateX(Math.PI);\n\n    const material = new THREE.MeshBasicMaterial({map: this.texture, side: THREE.DoubleSide});\n    this.mesh = new THREE.Mesh(\n      cylinderGeometry,\n      material\n    );\n    this.mesh.position.set(0, 0, 0);\n    this.scene.add(this.mesh);\n  }\n\n  /**\n   * Places the camera on scene.\n   * @private\n   */\n  private updateCamera() {\n    this.camera.aspect = this.aspectRatio;\n    this.camera.position.set(0, 0, 0);\n    this.camera.lookAt(0, 0, 1);\n    this.camera.position.set(0, this.cylinderHeight / 200, this.cameraRadius);\n    // TODO: Change camera y position to fix black strips on edges\n    this.camera.updateProjectionMatrix();\n  }\n\n  /**\n   * Initializes callbacks. (For now only onResize)\n   * @private\n   */\n  private initCallbacks() {\n    window.addEventListener('resize', () => {\n      this.update();\n    });\n  }\n\n  /**\n   * Updates label positions and visibility.\n   * @private\n   */\n  private updateLabelPositions() {\n    this.labels.forEach(element => {\n      const width = this.renderer.domElement.width;\n      const height = this.renderer.domElement.height;\n      const R = this.cylinderRadius;\n      const H = this.cylinderHeight;\n\n      const alpha = element.position.x * 2 * Math.PI;\n      const beta = toRange(this.controller.longitude);\n      const delta = toRange(alpha - beta);\n      let phi = toRange(-delta / this.repeatCount);\n\n      const position = new THREE.Vector3(\n        R * Math.sin(phi),\n        H / 2 * element.position.y,\n        R * Math.cos(phi),\n      );\n\n      const projected = position.project(this.camera);\n      const x = width / 2 * (1 + projected.x) - element.root.offsetWidth / 2;\n      const y = height / 2 * (1 - projected.y) - element.root.offsetHeight / 2;\n      if (Math.abs(delta) > this.horizontalFov / 2) {\n        element.root.style.display = 'none';\n      } else {\n        element.root.style.display = 'block';\n      }\n\n      element.root.style.left = x.toString() + 'px';\n      element.root.style.top = y.toString() + 'px';\n    });\n  }\n}\n\nexport {Label, PanoramaViewer, IController, SimpleController, MouseController};\n"],"names":[],"mappings":"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"}